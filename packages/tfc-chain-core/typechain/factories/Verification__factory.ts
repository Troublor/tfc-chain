/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BytesLike,
  BigNumberish,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Verification } from "../Verification";

export class Verification__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    sector_: string,
    seed_: BytesLike,
    seedSubmitter_: string,
    submitProofTimeout_: BigNumberish,
    verifyProofTimeout_: BigNumberish,
    verifyThreshold_: BigNumberish,
    sectorReward_: BigNumberish,
    seedReward_: BigNumberish,
    verifyReward_: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<Verification> {
    return super.deploy(
      sector_,
      seed_,
      seedSubmitter_,
      submitProofTimeout_,
      verifyProofTimeout_,
      verifyThreshold_,
      sectorReward_,
      seedReward_,
      verifyReward_,
      overrides || {}
    ) as Promise<Verification>;
  }
  getDeployTransaction(
    sector_: string,
    seed_: BytesLike,
    seedSubmitter_: string,
    submitProofTimeout_: BigNumberish,
    verifyProofTimeout_: BigNumberish,
    verifyThreshold_: BigNumberish,
    sectorReward_: BigNumberish,
    seedReward_: BigNumberish,
    verifyReward_: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      sector_,
      seed_,
      seedSubmitter_,
      submitProofTimeout_,
      verifyProofTimeout_,
      verifyThreshold_,
      sectorReward_,
      seedReward_,
      verifyReward_,
      overrides || {}
    );
  }
  attach(address: string): Verification {
    return super.attach(address) as Verification;
  }
  connect(signer: Signer): Verification__factory {
    return super.connect(signer) as Verification__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Verification {
    return new Contract(address, _abi, signerOrProvider) as Verification;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "sector_",
        type: "address",
      },
      {
        internalType: "bytes28",
        name: "seed_",
        type: "bytes28",
      },
      {
        internalType: "address payable",
        name: "seedSubmitter_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "submitProofTimeout_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "verifyProofTimeout_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "verifyThreshold_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sectorReward_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "seedReward_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "verifyReward_",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes28",
        name: "sector_afid",
        type: "bytes28",
      },
      {
        indexed: false,
        internalType: "bytes28",
        name: "seed",
        type: "bytes28",
      },
      {
        indexed: false,
        internalType: "bytes28",
        name: "proof",
        type: "bytes28",
      },
    ],
    name: "ProofSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes28",
        name: "sector_afid",
        type: "bytes28",
      },
      {
        indexed: false,
        internalType: "bytes28",
        name: "seed",
        type: "bytes28",
      },
      {
        indexed: false,
        internalType: "bytes28",
        name: "proof",
        type: "bytes28",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "ProofVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "VerifyFinish",
    type: "event",
  },
  {
    inputs: [],
    name: "STATUS_VERIFYING",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STATUS_WAITING",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collectFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "expireSubmitProofDDL",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expireVerifyProofDDL",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fail",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasVerified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pass",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proof",
    outputs: [
      {
        internalType: "bytes28",
        name: "",
        type: "bytes28",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sector",
    outputs: [
      {
        internalType: "contract ISector",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sectorReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "bytes28",
        name: "",
        type: "bytes28",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seedReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seedSubmitter",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "proof_",
        type: "bytes28",
      },
    ],
    name: "submitProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "submitProofDDL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "turboFil",
    outputs: [
      {
        internalType: "contract ITurboFil",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "result_",
        type: "bool",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyProofDDL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";
